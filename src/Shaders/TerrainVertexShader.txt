#version 400 core

in vec3 position;
in vec2 texture_coords;
in vec3 normal;


out vec2 passed_texture_coords;
out vec3 surfaceNormal;
out vec3 ToLightVector;
out vec3 ToCameraVector;



uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 Light_position;


void main()
{
  vec4 worldPosition=(transformationMatrix * vec4(position.xyz,1.0));
  vec4 camera_position = inverse(viewMatrix) * vec4(0.0,0.0,0.0,1.0) ;
  surfaceNormal=(transformationMatrix * vec4(normal,0.0)).xyz;
  
  ToCameraVector = camera_position.xyz -  worldPosition.xyz;
  ToLightVector=Light_position - worldPosition.xyz;
  
  
  gl_Position=projectionMatrix * viewMatrix * worldPosition;
  passed_texture_coords=texture_coords *40;
  
  
  
   
  



}